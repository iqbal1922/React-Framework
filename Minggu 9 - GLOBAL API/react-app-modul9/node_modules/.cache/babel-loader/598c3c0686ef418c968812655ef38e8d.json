{"ast":null,"code":"const domainPath = 'http://localhost:3001';\n\nconst GetAPI = path => {\n  const promise = new Promise((resolve, reject) => {\n    fetch(`${domainPath}/${path}`).then(response => response.json()).then(result => {\n      resolve(result);\n    }, err => {\n      reject(err);\n    });\n  });\n  return promise;\n};\n\n_c = GetAPI;\n\nconst PostAPI = (path, data) => {\n  const promise = new Promise((resolve, reject) => {\n    fetch(`${domainPath}/${path}`, {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(result => {\n      resolve(result);\n    }, err => {\n      reject(err);\n    });\n  });\n  return promise;\n};\n\n_c2 = PostAPI;\n\nconst DeleteAPI = (path, data) => {\n  const promise = new Promise((resolve, reject) => {\n    fetch(`${domainPath}/${path}/${data}`, {\n      method: 'DELETE'\n    }).then(result => {\n      resolve(result);\n    }, err => {\n      reject(err);\n    });\n  });\n  return promise;\n};\n\n_c3 = DeleteAPI;\n\nconst getNewsBlog = () => GetAPI('posts?_sort=id&_order=desc');\n\nconst postNewsBlog = dataYgDikirim => PostAPI('post', dataYgDikirim);\n\nconst deleteNewsBlog = dataYgDihapus => DeleteAPI('post', dataYgDihapus);\n\nconst API = {\n  getNewsBlog,\n  postNewsBlog,\n  deleteNewsBlog\n};\nexport default API;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GetAPI\");\n$RefreshReg$(_c2, \"PostAPI\");\n$RefreshReg$(_c3, \"DeleteAPI\");","map":{"version":3,"sources":["/Users/md1010/Documents/Semester 6/Framewrok-React-JS/Minggu 9 - GLOBAL API/react-app-modul9/src/service/index.js"],"names":["domainPath","GetAPI","path","promise","Promise","resolve","reject","fetch","then","response","json","result","err","PostAPI","data","method","headers","body","JSON","stringify","DeleteAPI","getNewsBlog","postNewsBlog","dataYgDikirim","deleteNewsBlog","dataYgDihapus","API"],"mappings":"AAAA,MAAMA,UAAU,GAAG,uBAAnB;;AACA,MAAMC,MAAM,GAAIC,IAAD,IAAU;AACrB,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7CC,IAAAA,KAAK,CAAE,GAAEP,UAAW,IAAGE,IAAK,EAAvB,CAAL,CACKM,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEWG,MAAD,IAAY;AACdN,MAAAA,OAAO,CAACM,MAAD,CAAP;AACH,KAJL,EAIQC,GAAD,IAAS;AACRN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACH,KANL;AAOH,GARe,CAAhB;AASA,SAAOT,OAAP;AACH,CAXD;;KAAMF,M;;AAaN,MAAMY,OAAO,GAAG,CAACX,IAAD,EAAOY,IAAP,KAAgB;AAC5B,QAAMX,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7CC,IAAAA,KAAK,CAAE,GAAEP,UAAW,IAAGE,IAAK,EAAvB,EAA0B;AAC3Ba,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAFkB;AAM3BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AANqB,KAA1B,CAAL,CAQCN,IARD,CAQOG,MAAD,IAAY;AACdN,MAAAA,OAAO,CAACM,MAAD,CAAP;AACH,KAVD,EAUGC,GAAD,IAAS;AACPN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACH,KAZD;AAaH,GAde,CAAhB;AAeA,SAAOT,OAAP;AACH,CAjBD;;MAAMU,O;;AAmBN,MAAMO,SAAS,GAAG,CAAClB,IAAD,EAAOY,IAAP,KAAgB;AAC9B,QAAMX,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7CC,IAAAA,KAAK,CAAE,GAAEP,UAAW,IAAGE,IAAK,IAAGY,IAAK,EAA/B,EAAkC;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAlC,CAAL,CACCP,IADD,CACOG,MAAD,IAAY;AACdN,MAAAA,OAAO,CAACM,MAAD,CAAP;AACH,KAHD,EAGIC,GAAD,IAAS;AACRN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACH,KALD;AAMH,GAPe,CAAhB;AAQA,SAAOT,OAAP;AACH,CAVD;;MAAMiB,S;;AAYN,MAAMC,WAAW,GAAG,MAAMpB,MAAM,CAAC,4BAAD,CAAhC;;AACA,MAAMqB,YAAY,GAAIC,aAAD,IAAmBV,OAAO,CAAC,MAAD,EAASU,aAAT,CAA/C;;AACA,MAAMC,cAAc,GAAIC,aAAD,IAAmBL,SAAS,CAAC,MAAD,EAASK,aAAT,CAAnD;;AAEA,MAAMC,GAAG,GAAG;AACRL,EAAAA,WADQ;AAERC,EAAAA,YAFQ;AAGRE,EAAAA;AAHQ,CAAZ;AAMA,eAAeE,GAAf","sourcesContent":["const domainPath = 'http://localhost:3001';\nconst GetAPI = (path) => {\n    const promise = new Promise((resolve, reject) => {\n        fetch(`${domainPath}/${path}`)\n            .then(response => response.json())\n            .then((result) => {\n                resolve(result);\n            }, (err) => {\n                reject(err);\n            })\n    })\n    return promise;\n}\n\nconst PostAPI = (path, data) => {\n    const promise = new Promise((resolve, reject) => {\n        fetch(`${domainPath}/${path}`, {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n        .then((result) => {\n            resolve(result);\n        },(err) => {\n            reject(err);\n        })\n    })\n    return promise;\n}\n\nconst DeleteAPI = (path, data) => {\n    const promise = new Promise((resolve, reject) => {\n        fetch(`${domainPath}/${path}/${data}`, {method: 'DELETE'})\n        .then((result) => {\n            resolve(result);\n        }, (err) => {\n            reject(err);\n        })\n    })\n    return promise;\n}\n\nconst getNewsBlog = () => GetAPI('posts?_sort=id&_order=desc');\nconst postNewsBlog = (dataYgDikirim) => PostAPI('post', dataYgDikirim);\nconst deleteNewsBlog = (dataYgDihapus) => DeleteAPI('post', dataYgDihapus);\n\nconst API = {\n    getNewsBlog,\n    postNewsBlog,\n    deleteNewsBlog\n}\n\nexport default API;"]},"metadata":{},"sourceType":"module"}